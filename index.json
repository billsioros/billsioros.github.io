[{"content":"\u003cp\u003ePython metaclasses give you control over class creation and behavior. They act as blueprints, shaping inheritance and behavior. Just as classes govern instances, metaclasses oversee classes.\u003c/p\u003e\n\u003ch2 id=\"a-little-know-gem\"\u003eA little know gem\u003c/h2\u003e\n\u003cp\u003eEver heard of a metaclass called \u003ccode\u003eabc.ABC\u003c/code\u003e? Chances are you\u0026rsquo;ve been using it without even realizing it. This little gem is pretty handy for crafting abstract base classes (ABCs) in Python. It\u0026rsquo;s like the rulebook that says, \u003cem\u003e\u0026ldquo;Hey, if you\u0026rsquo;re a subclass, you gotta follow these rules and implement these methods.\u0026rdquo;\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTake a look at \u003ccode\u003eVehicle\u003c/code\u003e â€” it\u0026rsquo;s an abstract base class setting the stage. And here comes \u003ccode\u003eCar\u003c/code\u003e, ready to roll as a subclass. But hey, to be a proper \u003ccode\u003eCar\u003c/code\u003e, it\u0026rsquo;s gotta have that \u003ccode\u003emove\u003c/code\u003e method implemented. Thanks to \u003ccode\u003eabc.ABC\u003c/code\u003e, Python keeps everyone in line, making sure subclasses play by the rules.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003efrom\u003c/span\u003e abc \u003cspan style=\"color:#ff79c6\"\u003eimport\u003c/span\u003e ABC, abstractmethod\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eVehicle\u003c/span\u003e(ABC):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    @abstractmethod\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003emove\u003c/span\u003e(self):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#ff79c6\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eCar\u003c/span\u003e(Vehicle):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003emove\u003c/span\u003e(self):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#ff79c6\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;Car is moving\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"lets-dive-deeper\"\u003eLet\u0026rsquo;s Dive Deeper!\u003c/h2\u003e\n\u003cp\u003eMetaclasses often roll out the red carpet for the \u003ccode\u003e__new__\u003c/code\u003e and \u003ccode\u003e__init__\u003c/code\u003e magic methods, letting you customize class creation like a pro.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e__new__\u003c/code\u003e is like the early bird of class creation, chirping before the class is even born. It\u0026rsquo;s the one responsible for bringing the class object into existence. Here\u0026rsquo;s where you can tweak base classes, but watch out for Method Resolution Order (MRO) issues if you\u0026rsquo;re not careful.\u003c/li\u003e\n\u003cli\u003eNow, \u003ccode\u003e__init__\u003c/code\u003e strolls in fashionably late, after the class has been born. Its job is to spruce up the class object once it\u0026rsquo;s out there in the world. When \u003ccode\u003e__init__\u003c/code\u003e arrives, the class\u0026rsquo;s namespace is already filled with goodies, like attributes and all. So, it\u0026rsquo;s your chance to add those final touches, knowing that the class is ready to rock and roll.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eMeta\u003c/span\u003e(\u003cspan style=\"color:#8be9fd;font-style:italic\"\u003etype\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003edef\u003c/span\u003e __new__(cls, name, bases, attrs, \u003cspan style=\"color:#ff79c6\"\u003e**\u003c/span\u003ekwargs):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;Meta.__new__ called with metaclass: \u003c/span\u003e\u003cspan style=\"color:#f1fa8c\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#ff79c6\"\u003e%\u003c/span\u003e cls\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003e__name__)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#6272a4\"\u003e# Call the __new__ method of the superclass (type) to create the class\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#ff79c6\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003esuper\u003c/span\u003e()\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003e__new__(cls, name, bases, attrs)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003edef\u003c/span\u003e __init__(cls, name, bases, attrs):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;Meta.__init__ called for class: \u003c/span\u003e\u003cspan style=\"color:#f1fa8c\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#ff79c6\"\u003e%\u003c/span\u003e cls\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003e__name__)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#6272a4\"\u003e# Display class-level attributes\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003eprint\u003c/span\u003e(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;  Class attributes for \u003c/span\u003e\u003cspan style=\"color:#f1fa8c\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#f1fa8c\"\u003e: \u003c/span\u003e\u003cspan style=\"color:#f1fa8c\"\u003e%s\u003c/span\u003e\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#ff79c6\"\u003e%\u003c/span\u003e (cls\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003e__name__, \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003egetattr\u003c/span\u003e(cls, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;class_attribute\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#ff79c6\"\u003eNone\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        )\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#6272a4\"\u003e# Call the __init__ method of the superclass (type) to initialize the class\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003esuper\u003c/span\u003e()\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003e__init__(name, bases, attrs)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eFoo\u003c/span\u003e(metaclass\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003eMeta):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre\u003e\u003ccode\u003eMeta.__new__ called with metaclass: Meta\nMeta.__init__ called for class: Foo\n  Class attributes for Foo: None\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"our-first-attempt\"\u003eOur first attempt\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eUppercaseAttributeMeta\u003c/span\u003e(\u003cspan style=\"color:#8be9fd;font-style:italic\"\u003etype\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003edef\u003c/span\u003e __new__(cls, name, bases, dct):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        uppercase_attrs \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            attr\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003eupper(): value\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#ff79c6\"\u003efor\u003c/span\u003e attr, value \u003cspan style=\"color:#ff79c6\"\u003ein\u003c/span\u003e dct\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003eitems()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#ff79c6\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#ff79c6\"\u003enot\u003c/span\u003e attr\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003estartswith(\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;__\u0026#34;\u003c/span\u003e)  \u003cspan style=\"color:#6272a4\"\u003e# Exclude magic methods\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#ff79c6\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003esuper\u003c/span\u003e()\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003e__new__(cls, name, bases, uppercase_attrs)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eBar\u003c/span\u003e(metaclass\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003eUppercaseAttributeMeta):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    message \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#8be9fd;font-style:italic\"\u003eprint\u003c/span\u003e(Bar\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003eMESSAGE)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre\u003e\u003ccode\u003ehello\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo, what\u0026rsquo;s happening here?\u003c/p\u003e\n\u003cp\u003eWe\u0026rsquo;re creating a metaclass called \u003ccode\u003eUppercaseAttributeMeta\u003c/code\u003e. When we create a class and set its metaclass to \u003ccode\u003eUppercaseAttributeMeta\u003c/code\u003e, it\u0026rsquo;s like telling Python, \u0026ldquo;Hey, when you create this class, make sure all the attribute names are in uppercase!\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eInside our metaclass, we have a special method called \u003ccode\u003e__new__\u003c/code\u003e. This method is like the constructor for our class. It gets called when Python is creating a new class. Inside \u003ccode\u003e__new__\u003c/code\u003e, we\u0026rsquo;re basically saying:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u0026ldquo;Hey, Python, give me all the attributes (\u003ccode\u003eattr\u003c/code\u003e) and their values (\u003ccode\u003evalue\u003c/code\u003e) that are inside this class (\u003ccode\u003edct\u003c/code\u003e).\u0026rdquo;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;Now, let\u0026rsquo;s check each attribute. If it\u0026rsquo;s not a special magic method (like \u003ccode\u003e__init__\u003c/code\u003e), let\u0026rsquo;s convert its name to uppercase and store it in a new dictionary (\u003ccode\u003euppercase_attrs\u003c/code\u003e).\u0026rdquo;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;Okay, Python, go ahead and create the class for me, but use this new dictionary with the uppercase attribute names and their values.\u0026rdquo;\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThen, we define a class called \u003ccode\u003eBar\u003c/code\u003e and tell Python to use our \u003ccode\u003eUppercaseAttributeMeta\u003c/code\u003e metaclass. So, any attributes we define in \u003ccode\u003eBar\u003c/code\u003e will automatically have their names converted to uppercase.\u003c/p\u003e\n\u003ch2 id=\"json-made-easy\"\u003eJSON Made Easy\u003c/h2\u003e\n\u003cp\u003eImagine you\u0026rsquo;re developing an application that interacts heavily with JSON data. As part of your project, you find yourself repeatedly defining classes to represent different JSON structures. This manual process not only consumes time but also increases the likelihood of errors creeping into your codebase.\u003c/p\u003e\n\u003cp\u003eYour objective is to devise a solution that automates the creation of these classes based on JSON schemas. By doing so, you aim to ensure that the classes generated adhere strictly to the schema specifications. This automation would significantly enhance code maintainability and reduce the potential for bugs when handling JSON data.\u003c/p\u003e\n\u003cp\u003eEnter the \u003ccode\u003eJsonSerializableMeta\u003c/code\u003e metaclass! When a class is being created, this metaclass swoops in to see if there\u0026rsquo;s a schema attribute present. If it finds one, it calls on the \u003ccode\u003eObjectBuilder\u003c/code\u003e from the \u003ccode\u003epython_jsonschema_objects\u003c/code\u003e package to craft classes that mirror the schema. These classes are then added as bases to the original class. This ensures that schema rules are enforced, simplifying validation and allowing for seamless JSON object serialization and deserialization.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003efrom\u003c/span\u003e abc \u003cspan style=\"color:#ff79c6\"\u003eimport\u003c/span\u003e ABCMeta\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003efrom\u003c/span\u003e python_jsonschema_objects \u003cspan style=\"color:#ff79c6\"\u003eimport\u003c/span\u003e ObjectBuilder\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003efrom\u003c/span\u003e python_jsonschema_objects.classbuilder \u003cspan style=\"color:#ff79c6\"\u003eimport\u003c/span\u003e ProtocolBase\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eJsonSerializableMeta\u003c/span\u003e(ABCMeta):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003edef\u003c/span\u003e __new__(cls, name, bases, attrs) \u003cspan style=\"color:#ff79c6\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;JsonSerializableMeta\u0026#34;\u003c/span\u003e:  \u003cspan style=\"color:#6272a4\"\u003e# noqa: D102\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#ff79c6\"\u003etry\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            schema \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e attrs[\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;schema\u0026#34;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#ff79c6\"\u003eexcept\u003c/span\u003e (KeyError, AttributeError):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#ff79c6\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003esuper\u003c/span\u003e()\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003e__new__(cls, name, bases, attrs)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        builder \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e ObjectBuilder(schema)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        classes \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e builder\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003ebuild_classes(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            strict\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003eTrue\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            named_only\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003eTrue\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            standardize_names\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003eFalse\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        )\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        json_schema \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003egetattr\u003c/span\u003e(classes, name)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#ff79c6\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003esuper\u003c/span\u003e()\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003e__new__(cls, name, (\u003cspan style=\"color:#ff79c6\"\u003e*\u003c/span\u003ebases, json_schema), attrs)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eJsonSerializable\u003c/span\u003e(ProtocolBase, metaclass\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003eJsonSerializableMeta):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLet\u0026rsquo;s now define a \u003ccode\u003eUser\u003c/code\u003e class using the JSON schema for Spotify users.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eUser\u003c/span\u003e(JsonSerializable):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    schema \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;https://dotify.com/track.user.json\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;$schema\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;http://json-schema.org/draft-04/schema#\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;User\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;object\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;required\u0026#34;\u003c/span\u003e: [\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;display_name\u0026#34;\u003c/span\u003e],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;properties\u0026#34;\u003c/span\u003e: {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;display_name\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;external_urls\u0026#34;\u003c/span\u003e: {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;object\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;patternProperties\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;^.*$\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e}},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;minProperties\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e1\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            },\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;href\u0026#34;\u003c/span\u003e: {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;pattern\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;https://api.spotify.com/v1/users/.*\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            },\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;pattern\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;^user$\u0026#34;\u003c/span\u003e},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;uri\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;format\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;uri\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;pattern\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;spotify:user:.*\u0026#34;\u003c/span\u003e},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        },\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eObjectBuilder\u003c/code\u003e can take the schema directly or a path to a JSON schema file. So, the schema attribute at the class level might not always be a dictionary. Here\u0026rsquo;s an example where we end up with the same User class, no matter which way we go:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eimport\u003c/span\u003e json\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eschema \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;https://dotify.com/track.user.json\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;$schema\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;http://json-schema.org/draft-04/schema#\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;User\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;object\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;required\u0026#34;\u003c/span\u003e: [\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;display_name\u0026#34;\u003c/span\u003e],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;properties\u0026#34;\u003c/span\u003e: {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;display_name\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;external_urls\u0026#34;\u003c/span\u003e: {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;object\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;patternProperties\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;^.*$\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e}},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;minProperties\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e1\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        },\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;href\u0026#34;\u003c/span\u003e: {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;pattern\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;https://api.spotify.com/v1/users/.*\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        },\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;pattern\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;^user$\u0026#34;\u003c/span\u003e},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;uri\u0026#34;\u003c/span\u003e: {\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;string\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;format\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;uri\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;pattern\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;spotify:user:.*\u0026#34;\u003c/span\u003e},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    },\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eschema_path \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;./schema.json\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003ewith\u003c/span\u003e \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003eopen\u003c/span\u003e(schema_path, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;w\u0026#34;\u003c/span\u003e) \u003cspan style=\"color:#ff79c6\"\u003eas\u003c/span\u003e file:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    file\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003ewrite(json\u003cspan style=\"color:#ff79c6\"\u003e.\u003c/span\u003edumps(schema, indent\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#bd93f9\"\u003e4\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eUser\u003c/span\u003e(JsonSerializable):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    schema \u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e schema_path\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eWhen you create a \u003ccode\u003eUser\u003c/code\u003e object with all the required info, everything kicks off smoothly.\u003c/li\u003e\n\u003cli\u003eBut if you try to make a \u003ccode\u003eUser\u003c/code\u003e without providing all the necessary details, it\u0026rsquo;s like hitting a roadblockâ€”validation errors pop up. This shows how the class sticks to its rules, making sure everything\u0026rsquo;s in line with the schema during object creation.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e User(display_name\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;Vassilis Sioros\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003e\u0026lt;\u003c/span\u003eUser display_name\u003cspan style=\"color:#ff79c6\"\u003e=\u0026lt;\u003c/span\u003eLiteral\u003cspan style=\"color:#ff79c6\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#8be9fd;font-style:italic\"\u003estr\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003e\u0026gt;\u003c/span\u003e Vassilis Sioros\u003cspan style=\"color:#ff79c6\"\u003e\u0026gt;\u003c/span\u003e external_urls\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003eNone\u003c/span\u003e href\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003eNone\u003c/span\u003e \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003eid\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003eNone\u003c/span\u003e \u003cspan style=\"color:#8be9fd;font-style:italic\"\u003etype\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003eNone\u003c/span\u003e uri\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003eNone\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e User()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eValidationError: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#39;[\u0026#39;\u003c/span\u003edisplay_name\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#39;]\u0026#39;\u003c/span\u003e are required attributes \u003cspan style=\"color:#ff79c6\"\u003efor\u003c/span\u003e User\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s like having a super-efficient assistant that automates all the boring class-building tasks for you. With metaclasses doing the heavy lifting, you can whip up complex class structures from JSON schemas with just a few lines of code. It\u0026rsquo;s like getting a gourmet meal with minimal effort in the kitchen â€“ metaclasses make complicated tasks seem like a breeze.\u003c/p\u003e\n\u003cp\u003eAlright, folks, that\u0026rsquo;s a wrap for today\u0026rsquo;s dive into Python metaclasses! I hope you\u0026rsquo;ve enjoyed uncovering their hidden powers alongside me. So, until next time, keep exploring, keep coding, and I\u0026rsquo;ll keep you posted on more fascinating insights!\u003c/p\u003e\n","description":"Where Classes Get Their Magic!","image":"/images/posts/metaclasses.png","permalink":"https://billsioros.github.io/posts/python-metaclasses/","title":"Let's Talk Python Metaclasses"}]